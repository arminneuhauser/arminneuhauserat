@use "src/scss/variables.scss" as var;
@use "src/scss/functions.scss" as fn;
@use "src/scss/animations.scss";

section {
    box-sizing: border-box;
    padding: var(--core-padding);
    background-color: var(--base);
    position: relative;
    overflow: hidden;

    > div {
        display: grid;
        grid-gap: var(--core-padding);
        justify-content: center;
        margin: 0 auto;
        max-width: var(--core-max-width);
    }

    &.full {
        padding-left: 0;
        padding-right: 0;
    }

    &.narrow > div {
        max-width: var(--content-max-width);
    }

    &.col2 > div {
        @media (min-width: var.$breakpoint-lg) {
            grid-template-columns: 1fr 1fr;
        }
    }

    &.align-end > div {
        @media (min-width: var.$breakpoint-lg) {
            align-items: flex-end;
        }
    }
}

h1 {
    font-weight: 400;
    font-size: #{fn.rfs(24, 42)};
    line-height: 1.2;
}

p {
    font-size: #{fn.rem(18)};
}

.facts {
    max-width: var(--content-max-width);
    margin: #{fn.rem(50)} auto 0;
    font-size: #{fn.rfs(15, 20, $minWidth: 1280, $maxWidth: 2560)};

    > div {
        display: flex;
        flex-direction: column;
        border-top: 1px solid var(--on-base);
        padding: #{fn.rem(20)} 0;
        gap: #{fn.rem(5)};
    }

    h3 {
        font-family: var(--serif);
        font-weight: 700;
        font-size: 1.2em;
        margin: 0;
    }

    p {
        font-size: 1em;
        margin: 0;
    }

    a {
        align-self: flex-end;
    }
}

.link {
    justify-self: center;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: #{fn.rem(10)};
    margin-top: #{fn.rem(20)};
    font-size: #{fn.rfs(15, 20, $minWidth: 1280, $maxWidth: 2560)};

    i {
        border: 1px solid var(--primary);
        width: #{fn.rem(66)};
        height: #{fn.rem(66)};
        border-radius: 50%;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        transform: rotate(45deg);

        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: var(--primary);
            transform: scaleY(0);
            transform-origin: bottom left;
            transition: transform 0.6s var(--easing);
        }

        :global(svg) {
            position: relative;
            transform: rotate(-45deg);
        }
    }

    span {
        pointer-events: none;
    }

    &:hover {
        i::before {
            transform: scaleY(1);
        }
    }
}

img {
    display: block;
}

.next {
    background: none;
    min-height: var(--app-height, 100vh);
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    h3 {
        font-size: #{fn.rem(24)};
        margin: 2em;
    }

    .circle {
        height: #{fn.rem(320)};
        width: #{fn.rem(320)};
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        background-size: cover;
        background-position: center center;
        position: relative;

        @media (min-width: var.$breakpoint-md) {
            height: #{fn.rem(460)};
            width: #{fn.rem(460)};
        }
    }

    .text {
        text-align: center;
        pointer-events: none;
        color: #fff;

        h1 {
            font-family: var(--serif);
            font-weight: 700;
            font-size: #{fn.rem(36)};
            line-height: 1;
            margin: 0.5em 0;

            @media (min-width: var.$breakpoint-md) {
                font-size: #{fn.rem(42)};
            }

            @media (min-width: var.$breakpoint-lg) {
                font-size: #{fn.rem(48)};
            }
        }

        hr {
            width: 33%;
            border-color: currentColor;
        }

        p {
            font-size: #{fn.rem(15)};

            @media (min-width: var.$breakpoint-md) {
                font-size: #{fn.rem(16)};
            }

            @media (min-width: var.$breakpoint-lg) {
                font-size: #{fn.rem(18)};
            }
        }      
    }
}